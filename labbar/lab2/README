### SOURCE CODE STRUCTURE ###

 * help function declarations
 *
 * INT MAIN *
 * - <7> Command argument
 * - <7> Setup of listening socket
 * --- getaddrinfo()
 * --- loop through results and bind
 * - Sigaction settings
 * - Listening loop
 * --- <2> Listen, report and fork children -> do_child_stuff()
 *
 * do_child_stuff() *
 * - <2> Receive HTTP message from client 
 * - <2> Determine the host 
 * - <3> FILTER the request 
 * - <6> Change the GET/POST line
 * - <2> Modify Connection-header
 * - <2> Get address info of server 
 * - <2> Loop through results and connect 
 * - <2> Forward request to server 
 * - (Hopefully) receive response from server
 * - <8> FILTER the response
 * - Forward the response to client
 * - End child session


### PROVIDED FILES ###
Included in the <NetNinny.tar.gz> archive:

* The source code: nin_proxy.cc
* Makefile. Compile with 'make ninnyproxy'.
* Run Net Ninny Proxy using the command:
      ninnyproxy <desired proxy port number to specify for browser>
      
Configure your web browser to fetch http data through 127.0.0.1 and your
      selected port.


### TESTING AND LIMITATIONS ###
Tests were done in three different environments (variables listed as <browser,
client network, proxy network>, where localhost means that the proxy was run on
the same machine as the browser):

1) Firefox, LiU, localhost
2) Firefox, ComHem, localhost
3) Firefox, ComHem, Bahnhof
4) Firefox, LiU, Bahnhof


## FUNCTIONALITY TESTS: ##
a) http://www.ida.liu.se/~TDTS04/labs/2011/ass2/goodtest1.txt
b) http://www.ida.liu.se/~TDTS04/labs/2011/ass2/goodtest2.html
c) http://www.ida.liu.se/~TDTS04/labs/2011/ass2/SpongeBob.html
d) http://www.ida.liu.se/~TDTS04/labs/2011/ass2/badtest1.html
e) http://www.stackoverflow.com
f) http://www.aftonbladet.se
g) http://www.svd.se
h) http://www.bbc.com
i) http://google.com searching blacklisted words
j) http://video.wired.com
k) http://swedbank.se

The tests (a-d) tests basic functionality with text/HTML/url filtering, tests
(e-h) aim to test average functionality on a set of commonly used sites. Test (i)
is aimed specifically to test googling of the blacklisted words, (j) to test
streaming video functionality and (k) to test enforced https.

Test\Env   1	 2     3     4	 
--------+-----+-----+-----+-----+
   a    |  p  |  p  |  p  |  p  |
   b    |  p  |  p  |  p  |  p  |
   c    |  p  |  p  |  p  |  p  |
   d    |  p  |  p  |  p  |  p  |
   e    |  p  |  p  |  p  |  p  |
   f    |  p  |  p  |  f  |  f  |
   g    |  p  |  p  |  f  |  f  |
   h    |  p  |  p  |  p  |  p  |
   i    |  p  |  p  |  p  |  p  |
   j    |  f  |  f  |  f  |  f  |
   k    |  p  |  p  |  p  |  p  |
--------+-----+-----+-----+-----+


## KNOWN ISSUES ##
Remote running of Netninny is currently not fully supported.
Netninny does currently not support Chromium GET requests as the Connection-
header is named "Proxy-Connection".

## NETNINNY CAPABILITIES ##

The proxy only handles HTTP requests.
The proxy filters URL and plain uncompressed text content for certain keywords.
In current state (probably because of child session limitation of 8M-sized buffer),
the proxy might run into issues with video streaming over HTTP.
The proxy only filters content based on transmission from server to client. A
  modified-since request that is redirected to a cache will only filter if the
  cache is not local and uses HTTP communication.
The proxy allows for the host to reuse the bound port upon process termination.
The Proxy currently can't filter gzipped conten.

Shortcomings are further annotated in the source code.

# CREATORS #
Matteus Laurent - matla782@student.liu.se
Oscar Petersson - oscpe262@student.liu.se

Creds to Brian "Beej Jorgensen" Hall for his excellent guide found at
http://beej.us/guide/bgnet/